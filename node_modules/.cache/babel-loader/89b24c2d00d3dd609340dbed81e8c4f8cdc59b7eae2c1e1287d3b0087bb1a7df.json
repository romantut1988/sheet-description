{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = [];\nexport const todolistsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return state.filter(tl => tl.id != action.id);\n    case 'ADD-TODOLIST':\n      return [...state, {\n        id: action.todolistId,\n        title: action.title,\n        filter: \"all\"\n      }];\n    case 'CHANGE-TODOLIST-TITLE':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n        return [...state];\n      }\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n        return [...state];\n      }\n    default:\n      return state;\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: 'ADD-TODOLIST',\n    title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (todolistId, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    title: title,\n    id: todolistId\n  };\n};\nexport const changeTodolistFilterAC = (todolistId, filter) => {\n  return {\n    type: 'CHANGE-TODOLIST-FILTER',\n    filter: filter,\n    id: todolistId\n  };\n};","map":{"version":3,"names":["v1","initialState","todolistsReducer","state","arguments","length","undefined","action","type","filter","tl","id","todolistId","title","todolist","find","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC"],"sources":["D:/sheet-description/src/state/todolists-reducer.ts"],"sourcesContent":["import {FilterValuesType, TodolistType} from '../App';\r\nimport {v1} from 'uuid';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST'\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST'\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE'\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER'\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType =\r\n    RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType;\r\n\r\nconst initialState: Array<TodolistType> = []\r\n\r\nexport const todolistsReducer = (state = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [...state, {id: action.todolistId, title: action.title, filter: \"all\"}]\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state];\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return {type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return {type: 'ADD-TODOLIST', title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (todolistId: string, title: string): ChangeTodolistTitleActionType => {\r\n    return {type: 'CHANGE-TODOLIST-TITLE', title: title, id: todolistId}\r\n}\r\nexport const changeTodolistFilterAC = (todolistId: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return {type: 'CHANGE-TODOLIST-FILTER', filter: filter, id: todolistId}\r\n}\r\n"],"mappings":"AACA,SAAQA,EAAE,QAAO,MAAM;AA4BvB,MAAMC,YAAiC,GAAG,EAAE;AAE5C,OAAO,MAAMC,gBAAgB,GAAG,SAAAA,CAAA,EAAoE;EAAA,IAAnEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,YAAY;EAAA,IAAEM,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtE,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,iBAAiB;MAClB,OAAOL,KAAK,CAACM,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,IAAIJ,MAAM,CAACI,EAAE,CAAC;IACjD,KAAK,cAAc;MACf,OAAO,CAAC,GAAGR,KAAK,EAAE;QAACQ,EAAE,EAAEJ,MAAM,CAACK,UAAU;QAAEC,KAAK,EAAEN,MAAM,CAACM,KAAK;QAAEJ,MAAM,EAAE;MAAK,CAAC,CAAC;IAClF,KAAK,uBAAuB;MAAE;QAC1B,MAAMK,QAAQ,GAAGX,KAAK,CAACY,IAAI,CAACL,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;QACtD,IAAIG,QAAQ,EAAE;UACV;UACAA,QAAQ,CAACD,KAAK,GAAGN,MAAM,CAACM,KAAK;QACjC;QACA,OAAO,CAAC,GAAGV,KAAK,CAAC;MACrB;IACA,KAAK,wBAAwB;MAAE;QAC3B,MAAMW,QAAQ,GAAGX,KAAK,CAACY,IAAI,CAACL,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;QACtD,IAAIG,QAAQ,EAAE;UACV;UACAA,QAAQ,CAACL,MAAM,GAAGF,MAAM,CAACE,MAAM;QACnC;QACA,OAAO,CAAC,GAAGN,KAAK,CAAC;MACrB;IACA;MACI,OAAOA,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAIJ,UAAkB,IAA+B;EAC9E,OAAO;IAACJ,IAAI,EAAE,iBAAiB;IAAEG,EAAE,EAAEC;EAAU,CAAC;AACpD,CAAC;AACD,OAAO,MAAMK,aAAa,GAAIJ,KAAa,IAA4B;EACnE,OAAO;IAACL,IAAI,EAAE,cAAc;IAAEK,KAAK;IAAED,UAAU,EAAEZ,EAAE;EAAE,CAAC;AAC1D,CAAC;AACD,OAAO,MAAMkB,qBAAqB,GAAGA,CAACN,UAAkB,EAAEC,KAAa,KAAoC;EACvG,OAAO;IAACL,IAAI,EAAE,uBAAuB;IAAEK,KAAK,EAAEA,KAAK;IAAEF,EAAE,EAAEC;EAAU,CAAC;AACxE,CAAC;AACD,OAAO,MAAMO,sBAAsB,GAAGA,CAACP,UAAkB,EAAEH,MAAwB,KAAqC;EACpH,OAAO;IAACD,IAAI,EAAE,wBAAwB;IAAEC,MAAM,EAAEA,MAAM;IAAEE,EAAE,EAAEC;EAAU,CAAC;AAC3E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}