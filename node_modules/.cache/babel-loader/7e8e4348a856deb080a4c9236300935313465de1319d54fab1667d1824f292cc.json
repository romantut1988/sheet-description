{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = {};\nexport const tasksReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'REMOVE-TASK':\n      {\n        const stateCopy = {\n          ...state\n        };\n        const tasks = state[action.todolistId];\n        const filteredTasks = tasks.filter(t => t.id !== action.taskId);\n        stateCopy[action.todolistId] = filteredTasks;\n        return stateCopy;\n      }\n    case 'ADD-TASK':\n      {\n        const stateCopy = {\n          ...state\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTask = {\n          id: v1(),\n          title: action.title,\n          isDone: false\n        };\n        const newTasks = [newTask, ...tasks];\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n    case 'CHANGE-TASK-STATUS':\n      {\n        return {\n          ...state,\n          [action.todolistId]: state[action.todolistId].map(t => t.id === action.taskId ? {\n            ...t,\n            isDone: action.isDone\n          } : t)\n        };\n      }\n    case 'CHANGE-TASK-TITLE':\n      {\n        const stateCopy = {\n          ...state\n        };\n        let tasks = stateCopy[action.todolistId];\n        // найдём нужную таску:\n        let task = tasks.find(t => t.id === action.taskId);\n        //изменим таску, если она нашлась\n        if (task) {\n          task.title = action.title;\n        }\n        return stateCopy;\n      }\n    case 'ADD-TODOLIST':\n      {\n        const stateCopy = {\n          ...state\n        };\n        stateCopy[action.todolistId] = [];\n        return stateCopy;\n      }\n    case 'REMOVE-TODOLIST':\n      {\n        const stateCopy = {\n          ...state\n        };\n        delete stateCopy[action.id];\n        return stateCopy;\n      }\n    default:\n      return state;\n  }\n};\nexport const removeTaskAC = (taskId, todolistId) => {\n  return {\n    type: 'REMOVE-TASK',\n    todolistId,\n    taskId\n  };\n};\nexport const addTaskAC = (title, todolistId) => {\n  return {\n    type: 'ADD-TASK',\n    title,\n    todolistId\n  };\n};\nexport const changeTaskStatusAC = (taskId, isDone, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-STATUS',\n    isDone,\n    todolistId,\n    taskId\n  };\n};\nexport const changeTaskTitleAC = (taskId, title, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-TITLE',\n    title,\n    todolistId,\n    taskId\n  };\n};","map":{"version":3,"names":["v1","initialState","tasksReducer","state","arguments","length","undefined","action","type","stateCopy","tasks","todolistId","filteredTasks","filter","t","id","taskId","newTask","title","isDone","newTasks","map","task","find","removeTaskAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC"],"sources":["D:/sheet-description/src/state/tasks-reducer.ts"],"sourcesContent":["import {FilterValuesType, TasksStateType, TodolistType} from '../App';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK'\r\n    todolistId: string\r\n    taskId: string\r\n}\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK'\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS'\r\n    taskId: string\r\n    todolistId: string\r\n    isDone: boolean\r\n}\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE'\r\n    taskId: string\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType | ChangeTaskTitleActionType\r\n    | AddTodolistActionType | RemoveTodolistActionType;\r\nconst initialState: TasksStateType = {}\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state};\r\n            const tasks = state[action.todolistId];\r\n            const filteredTasks = tasks.filter(t => t.id !== action.taskId)\r\n            stateCopy[action.todolistId] = filteredTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state};\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTask = {id: v1(), title: action.title, isDone: false};\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            return{\r\n              ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, isDone: action.isDone}: t)\r\n            }\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            const stateCopy = {...state};\r\n\r\n            let tasks = stateCopy[action.todolistId];\r\n            // найдём нужную таску:\r\n            let task = tasks.find(t => t.id === action.taskId);\r\n            //изменим таску, если она нашлась\r\n            if (task) {\r\n                task.title = action.title;\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            const stateCopy = {...state};\r\n\r\n            stateCopy[action.todolistId] = [];\r\n\r\n            return stateCopy;\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const stateCopy = {...state};\r\n            delete stateCopy[action.id]\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', todolistId, taskId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string,\r\n                                   isDone: boolean,\r\n                                   todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string,\r\n                                  title: string,\r\n                                  todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}