{"ast":null,"code":"var _jsxFileName = \"D:\\\\sheet-description\\\\src\\\\AddItemForm.tsx\",\n  _s = $RefreshSig$();\nimport IconButton from '@mui/material/IconButton/IconButton';\nimport TextField from '@mui/material/TextField/TextField';\nimport React, { memo, useState } from 'react';\nimport { AddBox } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddItemForm = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n  const addItem = () => {\n    if (title.trim() !== \"\") {\n      props.addItem(title);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n  const onKeyPressHandler = e => {\n    if (error) setError(null);\n    if (e.charCode === 13) {\n      addItem();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      error: !!error,\n      value: title,\n      onChange: onChangeHandler,\n      onKeyPress: onKeyPressHandler,\n      label: \"Title\",\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: addItem,\n      children: /*#__PURE__*/_jsxDEV(AddBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}, \"MVMLmy4kP556v7E3KHW9YED2Wxk=\")), \"MVMLmy4kP556v7E3KHW9YED2Wxk=\");\n_c2 = AddItemForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddItemForm$memo\");\n$RefreshReg$(_c2, \"AddItemForm\");","map":{"version":3,"names":["IconButton","TextField","React","memo","useState","AddBox","jsxDEV","_jsxDEV","AddItemForm","_s","_c","props","title","setTitle","error","setError","addItem","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","children","variant","onChange","onKeyPress","label","helperText","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c2","$RefreshReg$"],"sources":["D:/sheet-description/src/AddItemForm.tsx"],"sourcesContent":["import IconButton from '@mui/material/IconButton/IconButton';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport React, {ChangeEvent, KeyboardEvent, memo, useState} from 'react';\r\nimport {AddBox} from \"@mui/icons-material\";\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = memo((props: AddItemFormPropsType) => {\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error) setError(null)\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,KAAK,IAA+BC,IAAI,EAAEC,QAAQ,QAAO,OAAO;AACvE,SAAQC,MAAM,QAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3C,OAAO,MAAMC,WAAW,gBAAAC,EAAA,eAAGN,IAAI,CAAAO,EAAA,GAAAD,EAAA,CAAEE,KAA2B,IAAK;EAAAF,EAAA;EAC7D,IAAI,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAErD,MAAMY,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAIJ,KAAK,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;MACrBN,KAAK,CAACK,OAAO,CAACJ,KAAK,CAAC;MACpBC,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHE,QAAQ,CAAC,mBAAmB,CAAC;IACjC;EACJ,CAAC;EAED,MAAMG,eAAe,GAAIC,CAAgC,IAAK;IAC1DN,QAAQ,CAACM,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAkC,IAAK;IAC9D,IAAIL,KAAK,EAAEC,QAAQ,CAAC,IAAI,CAAC;IACzB,IAAII,CAAC,CAACI,QAAQ,KAAK,EAAE,EAAE;MACnBP,OAAO,EAAE;IACb;EACJ,CAAC;EAED,oBAAOT,OAAA;IAAAiB,QAAA,gBACHjB,OAAA,CAACN,SAAS;MAACwB,OAAO,EAAC,UAAU;MAClBX,KAAK,EAAE,CAAC,CAACA,KAAM;MACfO,KAAK,EAAET,KAAM;MACbc,QAAQ,EAAER,eAAgB;MAC1BS,UAAU,EAAEL,iBAAkB;MAC9BM,KAAK,EAAC,OAAO;MACbC,UAAU,EAAEf;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACF1B,OAAA,CAACP,UAAU;MAACkC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEnB,OAAQ;MAAAQ,QAAA,eACzCjB,OAAA,CAACF,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AACV,CAAC,kCAAC;AAAAG,GAAA,GArCW5B,WAAW;AAAA,IAAAE,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}